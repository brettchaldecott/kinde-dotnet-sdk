// <auto-generated>
/*
 * Kinde Management API
 *
 *  Provides endpoints to manage your Kinde Businesses.  ## Intro  ## How to use  1. [Set up and authorize a machine-to-machine (M2M) application](https://docs.kinde.com/developer-tools/kinde-api/connect-to-kinde-api/).  2. [Generate a test access token](https://docs.kinde.com/developer-tools/kinde-api/access-token-for-api/)  3. Test request any endpoint using the test token 
 *
 * The version of the OpenAPI document: 1
 * Contact: support@kinde.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

#nullable enable

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Text.Json;
using System.Text.Json.Serialization;
using Kinde.Api.Client;

namespace Kinde.Api.Model
{
    /// <summary>
    /// GetApisResponseApisInner
    /// </summary>
    public partial class GetApisResponseApisInner
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="GetApisResponseApisInner" /> class.
        /// </summary>
        /// <param name="id">The unique ID for the API.</param>
        /// <param name="name">The API&#39;s name.</param>
        /// <param name="audience">A unique identifier for the API - commonly the URL. This value will be used as the &#x60;audience&#x60; parameter in authorization claims.</param>
        /// <param name="isManagementApi">Whether or not it is the Kinde management API.</param>
        /// <param name="scopes">scopes</param>
        [JsonConstructor]
        public GetApisResponseApisInner(Option<string?> id = default, Option<string?> name = default, Option<string?> audience = default, Option<bool?> isManagementApi = default, Option<List<GetApisResponseApisInnerScopesInner>?> scopes = default)
        {
            IdOption = id;
            NameOption = name;
            AudienceOption = audience;
            IsManagementApiOption = isManagementApi;
            ScopesOption = scopes;
            OnCreated();
        }

        partial void OnCreated();

        /// <summary>
        /// Used to track the state of Id
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> IdOption { get; private set; }

        /// <summary>
        /// The unique ID for the API.
        /// </summary>
        /// <value>The unique ID for the API.</value>
        /* <example>7ccd126599aa422a771abcb341596881</example> */
        [JsonPropertyName("id")]
        public string? Id { get { return this.IdOption; } set { this.IdOption = new Option<string?>(value); } }

        /// <summary>
        /// Used to track the state of Name
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> NameOption { get; private set; }

        /// <summary>
        /// The API&#39;s name.
        /// </summary>
        /// <value>The API&#39;s name.</value>
        /* <example>Example API</example> */
        [JsonPropertyName("name")]
        public string? Name { get { return this.NameOption; } set { this.NameOption = new Option<string?>(value); } }

        /// <summary>
        /// Used to track the state of Audience
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> AudienceOption { get; private set; }

        /// <summary>
        /// A unique identifier for the API - commonly the URL. This value will be used as the &#x60;audience&#x60; parameter in authorization claims.
        /// </summary>
        /// <value>A unique identifier for the API - commonly the URL. This value will be used as the &#x60;audience&#x60; parameter in authorization claims.</value>
        /* <example>https://api.example.com</example> */
        [JsonPropertyName("audience")]
        public string? Audience { get { return this.AudienceOption; } set { this.AudienceOption = new Option<string?>(value); } }

        /// <summary>
        /// Used to track the state of IsManagementApi
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<bool?> IsManagementApiOption { get; private set; }

        /// <summary>
        /// Whether or not it is the Kinde management API.
        /// </summary>
        /// <value>Whether or not it is the Kinde management API.</value>
        /* <example>false</example> */
        [JsonPropertyName("is_management_api")]
        public bool? IsManagementApi { get { return this.IsManagementApiOption; } set { this.IsManagementApiOption = new Option<bool?>(value); } }

        /// <summary>
        /// Used to track the state of Scopes
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<List<GetApisResponseApisInnerScopesInner>?> ScopesOption { get; private set; }

        /// <summary>
        /// Gets or Sets Scopes
        /// </summary>
        [JsonPropertyName("scopes")]
        public List<GetApisResponseApisInnerScopesInner>? Scopes { get { return this.ScopesOption; } set { this.ScopesOption = new Option<List<GetApisResponseApisInnerScopesInner>?>(value); } }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class GetApisResponseApisInner {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  Audience: ").Append(Audience).Append("\n");
            sb.Append("  IsManagementApi: ").Append(IsManagementApi).Append("\n");
            sb.Append("  Scopes: ").Append(Scopes).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
    }

    /// <summary>
    /// A Json converter for type <see cref="GetApisResponseApisInner" />
    /// </summary>
    public class GetApisResponseApisInnerJsonConverter : JsonConverter<GetApisResponseApisInner>
    {
        /// <summary>
        /// Deserializes json to <see cref="GetApisResponseApisInner" />
        /// </summary>
        /// <param name="utf8JsonReader"></param>
        /// <param name="typeToConvert"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <returns></returns>
        /// <exception cref="JsonException"></exception>
        public override GetApisResponseApisInner Read(ref Utf8JsonReader utf8JsonReader, Type typeToConvert, JsonSerializerOptions jsonSerializerOptions)
        {
            int currentDepth = utf8JsonReader.CurrentDepth;

            if (utf8JsonReader.TokenType != JsonTokenType.StartObject && utf8JsonReader.TokenType != JsonTokenType.StartArray)
                throw new JsonException();

            JsonTokenType startingTokenType = utf8JsonReader.TokenType;

            Option<string?> id = default;
            Option<string?> name = default;
            Option<string?> audience = default;
            Option<bool?> isManagementApi = default;
            Option<List<GetApisResponseApisInnerScopesInner>?> scopes = default;

            while (utf8JsonReader.Read())
            {
                if (startingTokenType == JsonTokenType.StartObject && utf8JsonReader.TokenType == JsonTokenType.EndObject && currentDepth == utf8JsonReader.CurrentDepth)
                    break;

                if (startingTokenType == JsonTokenType.StartArray && utf8JsonReader.TokenType == JsonTokenType.EndArray && currentDepth == utf8JsonReader.CurrentDepth)
                    break;

                if (utf8JsonReader.TokenType == JsonTokenType.PropertyName && currentDepth == utf8JsonReader.CurrentDepth - 1)
                {
                    string? localVarJsonPropertyName = utf8JsonReader.GetString();
                    utf8JsonReader.Read();

                    switch (localVarJsonPropertyName)
                    {
                        case "id":
                            id = new Option<string?>(utf8JsonReader.GetString()!);
                            break;
                        case "name":
                            name = new Option<string?>(utf8JsonReader.GetString()!);
                            break;
                        case "audience":
                            audience = new Option<string?>(utf8JsonReader.GetString()!);
                            break;
                        case "is_management_api":
                            isManagementApi = new Option<bool?>(utf8JsonReader.TokenType == JsonTokenType.Null ? (bool?)null : utf8JsonReader.GetBoolean());
                            break;
                        case "scopes":
                            scopes = new Option<List<GetApisResponseApisInnerScopesInner>?>(JsonSerializer.Deserialize<List<GetApisResponseApisInnerScopesInner>>(ref utf8JsonReader, jsonSerializerOptions)!);
                            break;
                        default:
                            break;
                    }
                }
            }

            if (id.IsSet && id.Value == null)
                throw new ArgumentNullException(nameof(id), "Property is not nullable for class GetApisResponseApisInner.");

            if (name.IsSet && name.Value == null)
                throw new ArgumentNullException(nameof(name), "Property is not nullable for class GetApisResponseApisInner.");

            if (audience.IsSet && audience.Value == null)
                throw new ArgumentNullException(nameof(audience), "Property is not nullable for class GetApisResponseApisInner.");

            if (isManagementApi.IsSet && isManagementApi.Value == null)
                throw new ArgumentNullException(nameof(isManagementApi), "Property is not nullable for class GetApisResponseApisInner.");

            if (scopes.IsSet && scopes.Value == null)
                throw new ArgumentNullException(nameof(scopes), "Property is not nullable for class GetApisResponseApisInner.");

            return new GetApisResponseApisInner(id, name, audience, isManagementApi, scopes);
        }

        /// <summary>
        /// Serializes a <see cref="GetApisResponseApisInner" />
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="getApisResponseApisInner"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <exception cref="NotImplementedException"></exception>
        public override void Write(Utf8JsonWriter writer, GetApisResponseApisInner getApisResponseApisInner, JsonSerializerOptions jsonSerializerOptions)
        {
            writer.WriteStartObject();

            WriteProperties(writer, getApisResponseApisInner, jsonSerializerOptions);
            writer.WriteEndObject();
        }

        /// <summary>
        /// Serializes the properties of <see cref="GetApisResponseApisInner" />
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="getApisResponseApisInner"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <exception cref="NotImplementedException"></exception>
        public void WriteProperties(Utf8JsonWriter writer, GetApisResponseApisInner getApisResponseApisInner, JsonSerializerOptions jsonSerializerOptions)
        {
            if (getApisResponseApisInner.IdOption.IsSet && getApisResponseApisInner.Id == null)
                throw new ArgumentNullException(nameof(getApisResponseApisInner.Id), "Property is required for class GetApisResponseApisInner.");

            if (getApisResponseApisInner.NameOption.IsSet && getApisResponseApisInner.Name == null)
                throw new ArgumentNullException(nameof(getApisResponseApisInner.Name), "Property is required for class GetApisResponseApisInner.");

            if (getApisResponseApisInner.AudienceOption.IsSet && getApisResponseApisInner.Audience == null)
                throw new ArgumentNullException(nameof(getApisResponseApisInner.Audience), "Property is required for class GetApisResponseApisInner.");

            if (getApisResponseApisInner.ScopesOption.IsSet && getApisResponseApisInner.Scopes == null)
                throw new ArgumentNullException(nameof(getApisResponseApisInner.Scopes), "Property is required for class GetApisResponseApisInner.");

            if (getApisResponseApisInner.IdOption.IsSet)
                writer.WriteString("id", getApisResponseApisInner.Id);

            if (getApisResponseApisInner.NameOption.IsSet)
                writer.WriteString("name", getApisResponseApisInner.Name);

            if (getApisResponseApisInner.AudienceOption.IsSet)
                writer.WriteString("audience", getApisResponseApisInner.Audience);

            if (getApisResponseApisInner.IsManagementApiOption.IsSet)
                writer.WriteBoolean("is_management_api", getApisResponseApisInner.IsManagementApiOption.Value!.Value);

            if (getApisResponseApisInner.ScopesOption.IsSet)
            {
                writer.WritePropertyName("scopes");
                JsonSerializer.Serialize(writer, getApisResponseApisInner.Scopes, jsonSerializerOptions);
            }
        }
    }
}
